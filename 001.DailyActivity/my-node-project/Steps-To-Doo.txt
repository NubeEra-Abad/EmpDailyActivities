Install Node.js:
Open a terminal.
Run the following command to install Node.js and npm:
$ sudo apt update
$ sudo apt install nodejs npm
Install MySQL Server:
Run the following command to install MySQL Server:
$ sudo apt install mysql-server

Start MySQL Service:
Run the following command to start the MySQL service:
$ sudo service mysql start
Create a MySQL Database and User:
Launch the MySQL command-line tool:
$ mysql -u root -p
Enter your MySQL root password when prompted.
Create a new database:
$ CREATE DATABASE mydatabase;

Create a new user and grant privileges:

$ CREATE USER 'u1'@'localhost' IDENTIFIED BY '123';
GRANT ALL PRIVILEGES ON mydatabase.* TO 'myuser'@'localhost';
FLUSH PRIVILEGES;

Select the Database:
$ use mydatabase

Create a table in the database:
CREATE TABLE mytable (
    PersonID int,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255)
);

Insert Query In the table:
INSERT INTO mytable (PersonID, LastName, FirstName, Address, City)
VALUES (1, 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006');


Create a Node.js Project:
Create a new directory for your project
$ mkdir my-node-project
$ cd my-node-project
Initialize a new Node.js project:
$ npm init -y
Install Required Packages:
Install the necessary Node.js packages for MySQL integration:
$ npm install mysql
Create a JavaScript file:
Create a new file named app.js in your project directory.
Open the file and add the following code:
const mysql = require('mysql');

// MySQL connection configuration
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'u1',
  password: '123',
  database: 'mydatabase'
});

// Connect to MySQL
connection.connect((err) => {
  if (err) {
    console.error('Error connecting to MySQL:', err);
    return;
  }
  console.log('Connected to MySQL database');
});

// Perform MySQL query
connection.query('SELECT * FROM mytable', (err, results) => {
  if (err) {
    console.error('Error executing MySQL query:', err);
    return;
  }
  console.log('Query results:', results);
});

// Close MySQL connection
connection.end((err) => {
  if (err) {
    console.error('Error closing MySQL connection:', err);
    return;
  }
  console.log('MySQL connection closed');
});

Run the Node.js Application:
Save the app.js file.
Run the Node.js application with the following command:
$ node app.js













hitstory of server:
Practical Of Node.js + MySQL Task:

sudo apt update
sudo apt install nodejs npm
clear
nodejs --version
clear
sudo apt install mysql-server
clear
mysql --version
sudo service mysql start
sudo service mysql status
mysql -u root -p


mkdir my-node-project
cd my-node-project
npm init -y
ls
npm install mysql
nano app.js
mysql -u root -p
node app.js
sudo apt update
sudo apt install --only-upgrade mysql-client
sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf
sudo service mysql restart
node app.js
mysql -u u1 -p
mysql -u root -p
node app.js
mysql -u root -p
node app.js
mysql -u root -p
node app.js


